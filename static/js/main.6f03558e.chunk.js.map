{"version":3,"sources":["Links.jsx","Navbar.jsx","Project.jsx","Projects.jsx","Accordion.jsx","Skills.jsx","About.jsx","Footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["StyledLinks","styled","div","Links","className","href","title","target","rel","NavbarWrapper","nav","NavbarContent","Navbar","StyledProject","StyledImg","img","StyledP","p","StyledAnchor","a","Project","props","class","src","alt","desc","source","StyledProjects","Projects","StyledAccordion","Accordion","useState","expanded","setExpanded","onClick","name","style","maxHeight","hidden","items","map","item","StyledSkills","Skills","StyledAbout","About","id","StyledFooter","Footer","StyledApp","MainWrapper","main","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6f03558e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLinks = styled.div`\r\n    display: flex;\r\n    \r\n    a {\r\n        box-sizing: content-box;\r\n        font-family: 'Rubik', Arial, Helvetica, sans-serif;\r\n        font-size: 1.25em;\r\n        text-decoration: none;\r\n        border-bottom: 2px solid transparent;\r\n        color: #000;\r\n        margin-left: 2em;\r\n\r\n        &:hover {\r\n            border-bottom: 2px solid black;\r\n        }\r\n    }\r\n    \r\n    @media only screen and (max-width: 768px) {\r\n        a {\r\n            margin: 0 1em;\r\n        }\r\n    }\r\n`\r\n\r\nfunction Links() {\r\n    return (\r\n        <StyledLinks className=\"Links\">\r\n            <a href=\"#about\" title=\"Learn a bit more about me\">about</a>\r\n            <a href=\"https://github.com/tlannigan\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"My GitHub profile\">github</a>\r\n            <a href=\"https://www.linkedin.com/in/tristanlannigan/\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"My LinkedIn profile\">linkedin</a>\r\n            <a href=\"https://github.com/tlannigan/tlannigan.github.io/tree/source\">source</a>\r\n        </StyledLinks>\r\n    );\r\n}\r\n\r\nexport default Links;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Links from './Links'\r\n\r\nconst NavbarWrapper = styled.nav`\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    background: #FFF;\r\n    box-shadow: 0px 5px 8px 0px #A08D91;\r\n\r\n    > div {\r\n        max-width: 900px;\r\n        padding: 0 2em;\r\n    }\r\n`\r\n\r\nconst NavbarContent = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 4em;\r\n    margin: 0 auto;\r\n    \r\n    h1 {\r\n        font-family: 'Rubik Mono One', Arial, Helvetica, sans-serif;\r\n        margin: 0;\r\n    }\r\n    \r\n    @media only screen and (max-width: 768px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <NavbarWrapper className=\"Navbar\">\r\n            <NavbarContent>\r\n                <h1>TRISTAN LANNIGAN</h1>\r\n                <Links />\r\n            </NavbarContent>\r\n        </NavbarWrapper>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledProject = styled.div`\r\n    margin-bottom: 3em;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        flex-direction: column;\r\n        justify-content: fit-content;\r\n        max-height: unset;\r\n        overflow: visible;\r\n    }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n    width: 100%;\r\n    object-fit: contain;\r\n    box-shadow: 4px 4px 4px 2px rgba(0, 0, 0, 0.3);\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        flex: 1 1 50%;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n    flex: 0 1 0;\r\n    align-self: center;\r\n    text-align: justify;\r\n    font-size: 18px;\r\n    margin: 0;\r\n    padding-bottom: 1em;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        flex: 1 1 50%;\r\n    }\r\n`;\r\n\r\nconst StyledAnchor = styled.a`\r\n    margin-right: 1em;\r\n`\r\n\r\nfunction Project(props) {\r\n    return (\r\n        <StyledProject class=\"Project\">\r\n            {props.src ? <StyledImg src={props.src} alt={props.alt} /> : ''}\r\n            <h3>{props.title}</h3>\r\n            <StyledP>{props.desc}</StyledP>\r\n            {props.href ? <StyledAnchor href={props.href}>Link to site</StyledAnchor> : ''}\r\n            {props.source ? <StyledAnchor href={props.source}>Link to source</StyledAnchor> : (props.href ? 'Private Source' : '')}\r\n        </StyledProject>\r\n    );\r\n}\r\n\r\nexport default Project;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Project from './Project'\r\n\r\nconst StyledProjects = styled.div`\r\n\r\n`\r\n\r\nfunction Projects() {\r\n    return (\r\n        <StyledProjects className=\"Projects\">\r\n            <h2>projects</h2>\r\n            <Project\r\n                src='./apollo.jpg'\r\n                alt='Apollo app'\r\n                title='Apollo - Overwolf App'\r\n                desc='Gaming app centered around providing new and unique audio experiences in games that don&apos;t already provide it, enhancing player experiences. Uses user preferences over time to recommend the best music in the moment for the player. Primarily worked frontend, audio streaming system, and database planning.'\r\n                href='https://www.overwolf.com/app/Players_Republik-Apollo'\r\n            />\r\n            <Project\r\n                src='./vidcruiter.png'\r\n                alt='VidCruiter website'\r\n                title='VidCruiter'\r\n                desc='Home of VidCruiter&apos;s flagship product. Improved performance and SEO practices of VidCruiter&apos;s PHP site. Worked on custom WordPress theme, produced and implemented new frontend designs.'\r\n                href='https://vidcruiter.com/'\r\n            />\r\n            <Project\r\n                src='./bgcdieppe.png'\r\n                alt='Boys &amp; Girls Club of Dieppe website'\r\n                title='Boys &amp; Girls Club of Dieppe'\r\n                desc='Home of Boys &amp; Girls Club of Dieppe for communicating schedules, updates, and other event info. Built from a skeleton theme for WordPress while I attended college.'\r\n                href='http://bgcdieppe.ca'\r\n                source='https://github.com/tigerwil/bgc-dieppe'\r\n            />\r\n            <Project\r\n                src='./lannigandojo.png'\r\n                alt='Lannigan Dojo website'\r\n                title='Lannigan Dojo'\r\n                desc='Planned website for Lannigan Dojo in Moncton, NB'\r\n            />\r\n            <Project\r\n                title='License Plate OCR'\r\n                desc='Developed for the specific needs of the police students at my college. Allows the user to easily scan a license plate in real-time video and know immediately whether the car belongs to a student.'\r\n                source='https://github.com/tlannigan/license-plate-ocr'\r\n            />\r\n            <Project\r\n                title='Minecraft OSRS Datapack'\r\n                desc='The OSRS datapack is an attempt to recreate the popular MMORPG of Old School RuneScape. Datapacks are made using the rudimentary Minecraft \"Command\" language, allowing the developer to store and retrieve data at specific addresses.'\r\n                source='https://github.com/tlannigan/osrs-progression'\r\n            />\r\n        </StyledProjects>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledAccordion = styled.div`\r\n    margin-bottom: 1em;\r\n\r\n    div {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        i {\r\n            margin-right: 1em;\r\n        }\r\n\r\n        h3 {\r\n            font-size: 24px;\r\n            margin: 0;\r\n        }\r\n\r\n        &:first-child {\r\n            cursor: pointer;\r\n        }\r\n\r\n        &:nth-child(2) {\r\n            overflow: hidden;\r\n\r\n            ol {\r\n                margin: 0;\r\n                padding-left: 1.9em;\r\n\r\n                p {\r\n                    margin: 0;\r\n\r\n                    &:nth-child(2) {\r\n                        margin-top: 0.5em;\r\n                    }\r\n\r\n                    &.hidden {\r\n                        display: none;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nfunction Accordion(props) {\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    return (\r\n        <StyledAccordion className=\"Accordion\">\r\n            <div onClick={() => setExpanded(!expanded)}>\r\n                <i className={`fas ${expanded ? 'fa-minus' : 'fa-plus'}`}></i>\r\n                <h3>{props.name}</h3>\r\n            </div>\r\n            <div>\r\n                <ol style={{maxHeight: expanded ? 'unset' : 0}}>\r\n                    <p class=\"hidden\">{props.hidden}</p>\r\n                    {props.items && props.items.map((item) => <p>{item}</p>)}\r\n                </ol>\r\n            </div>\r\n        </StyledAccordion>\r\n    );\r\n}\r\n\r\nexport default Accordion;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Accordion from './Accordion'\r\n\r\nconst StyledSkills = styled.div`\r\n    p {\r\n        font-size: 18px;\r\n        margin-bottom: 2em;\r\n    }\r\n`\r\n\r\nfunction Skills() {\r\n    return (\r\n        <StyledSkills className=\"Skills\">\r\n            <p>\r\n                If you're in love with keywords or you are from a recruiting agency, check out these skill lists\r\n                that I've ranked from highest to least familiarity.\r\n            </p>\r\n            <Accordion name=\"Languages\" items={['JavaScript', 'Java', 'SQL', 'PHP', 'Python', 'C++']} />\r\n            <Accordion name=\"Technologies\" items={['Git', 'jQuery', 'React', 'Redux', 'GraphQL', 'Docker']} />\r\n            <Accordion name=\"Platforms\" items={['AWS', 'GitHub', 'Azure']} hidden='Stack Overflow' />\r\n        </StyledSkills>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Skills from './Skills'\r\n\r\nconst StyledAbout = styled.div`\r\n    p {\r\n        text-align: justify;\r\n        font-size: 18px;\r\n        line-height: 1.5;\r\n    }\r\n`\r\n\r\nfunction About() {\r\n    return (\r\n        <StyledAbout className=\"About\" id=\"about\">\r\n            <h2>about</h2>\r\n            <p>\r\n                As a developer the most exciting part of my day is learning new things, whether it be a new technology,\r\n                a new pattern, or just a deeper understanding of how something works. My most important goal everyday is\r\n                to expand my personal toolset. \r\n                My professional experiences heavily favour JavaScript, however I have experience working with Python and\r\n                Java on my own personal projects, as well as some unconventional languages.\r\n            </p>\r\n            <Skills />\r\n        </StyledAbout>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFooter = styled.div`\r\n    p {\r\n        font-size: 12px;\r\n        margin-top: 3em;\r\n    }\r\n`\r\n\r\nfunction Footer() {\r\n    return (\r\n        <StyledFooter className=\"Footer\">\r\n            <p>Tristan Lannigan &copy; 2020 - brought to you in part by <a href=\"https://stackoverflow.com\">Stack Overflow</a></p>\r\n        </StyledFooter>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react'\nimport styled from 'styled-components'\n\nimport Navbar from './Navbar'\nimport Projects from './Projects'\nimport About from './About'\nimport Footer from './Footer'\n\nconst StyledApp = styled.div`\n\n`\n\nconst MainWrapper = styled.main`\n    max-width: 900px;\n    margin: 6em auto 0 auto;\n    padding: 0 2em;\n    \n    h2 {\n        margin: 2em auto 1em auto;\n    }\n`\n\nfunction App() {\n    return (\n        <StyledApp className=\"App\">\n            <Navbar />\n            <MainWrapper>\n                <Projects />\n                <About />\n                <Footer />\n            </MainWrapper>\n        </StyledApp>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}